#!/bin/bash

# Based off: https://github.com/rcn-ee/repos/blob/master/bb-usb-gadgets/suite/bullseye/debian/bb-start-acm-ncm-rndis-old-gadget

set -euo pipefail

if [ "$EUID" -ne 0 ]; then
    echo "Please run as root"
    exit 1
fi

G_MULTI_DIR="/sys/kernel/config/usb_gadget/g_multi"

USB_VID="0x1d6b"
USB_PID="0x0104"
USB_BCDDEVICE="0x0404"
USB_BCDUSB="0x0200"

ETH_HOST_MAC_ADDR="02:12:34:56:78:9A"
ETH_DEV_MAC_ADDR="06:AB:CD:EF:12:34"

function enable_usb_serial()
{
    mkdir -p functions/acm.usb0
    ln -s functions/acm.usb0 configs/c.1/
}

function enable_usb_ethernet()
{
    mkdir -p functions/rndis.usb0
    echo "$ETH_HOST_MAC_ADDR" > functions/rndis.usb0/host_addr
    echo "$ETH_DEV_MAC_ADDR" > functions/rndis.usb0/dev_addr

    echo EF > functions/rndis.usb0/class
    echo 04 > functions/rndis.usb0/subclass
    echo 01 > functions/rndis.usb0/protocol

    echo 1 > os_desc/use
    echo 0xCD > os_desc/b_vendor_code
    echo MSFT100 > os_desc/qw_sign
    echo "RNDIS" > functions/rndis.usb0/os_desc/interface.rndis/compatible_id
    echo "5162001" > functions/rndis.usb0/os_desc/interface.rndis/sub_compatible_id

    mkdir -p configs/c.1
    ln -s configs/c.1 os_desc
    mkdir -p functions/rndis.usb0/os_desc/interface.rndis/Icons
    echo 2 > functions/rndis.usb0/os_desc/interface.rndis/Icons/type
    echo "%SystemRoot%\\system32\\shell32.dll,-233" > functions/rndis.usb0/os_desc/interface.rndis/Icons/data
    mkdir -p functions/rndis.usb0/os_desc/interface.rndis/Label
    echo 1 > functions/rndis.usb0/os_desc/interface.rndis/Label/type
    echo "Gemstone USB Ethernet" > functions/rndis.usb0/os_desc/interface.rndis/Label/data
    ln -s functions/rndis.usb0 configs/c.1/
}

function enable_mass_storage()
{
    MASS_STORAGE_IMG_DIR="/home/gemstone/gadget-mass-storage.img"

    if [ ! -f "$MASS_STORAGE_IMG_DIR" ]; then
        dd if=/dev/zero of="$MASS_STORAGE_IMG_DIR" bs=4M count=64
        mkfs.vfat "$MASS_STORAGE_IMG_DIR"
    fi

    mkdir -p functions/mass_storage.usb0
    echo "0" > functions/mass_storage.usb0/stall
    echo "0" > functions/mass_storage.usb0/lun.0/cdrom
    echo "0" > functions/mass_storage.usb0/lun.0/nofua
    echo "1" > functions/mass_storage.usb0/lun.0/removable
    echo "0" > functions/mass_storage.usb0/lun.0/ro
    echo "$MASS_STORAGE_IMG_DIR" > functions/mass_storage.usb0/lun.0/file
    ln -s functions/mass_storage.usb0 configs/c.1/
}

function cleanup()
{
    [ -d $G_MULTI_DIR ] || exit

    echo '' > $G_MULTI_DIR/UDC 2>/dev/null || true

    echo "Removing strings from configurations"
    for dir in "$G_MULTI_DIR"/configs/*/strings/*; do
        [ -d "$dir" ] && rmdir "$dir"
    done

    echo "Removing functions from configurations"
    for func in "$G_MULTI_DIR"/configs/*.*/*.*; do
        [ -e "$func" ] && rm "$func"
    done

    rm -f "$G_MULTI_DIR"/os_desc/*.*

    echo "Removing configurations"
    for conf in "$G_MULTI_DIR"/configs/*; do
        [ -d "$conf" ] && rmdir "$conf"
    done

    echo "Removing functions"
    for func in "$G_MULTI_DIR"/functions/*.*; do
        for dir in "$func"/os_desc/*/*; do
            [ -d "$dir" ] && rmdir "$dir"
        done

        [ -d "$func" ] && rmdir "$func"
    done

    echo "Removing strings"
    for str in "$G_MULTI_DIR"/strings/*; do
        [ -d "$str" ] && rmdir "$str"
    done

    echo "Removing gadget"
    rmdir "$G_MULTI_DIR"
}

function run()
{
    if ! mkdir -p "$G_MULTI_DIR"; then
        echo "Unable to create multifunction composite gadget (g_multi)"
        exit 1
    fi

    cd "$G_MULTI_DIR" || exit 1

    echo "$USB_BCDUSB" > bcdUSB
    echo "$USB_VID" > idVendor
    echo "$USB_PID" > idProduct
    echo "$USB_BCDDEVICE" > bcdDevice

    mkdir -p strings/0x409

    echo "1234567890" > strings/0x409/serialnumber
    echo "T3" > strings/0x409/manufacturer
    echo "Gemstone" > strings/0x409/product

    mkdir -p configs/c.1/strings/0x409
    echo "Gemstone Composite" > configs/c.1/strings/0x409/configuration

    echo 500 > configs/c.1/MaxPower

    enable_usb_serial
    enable_usb_ethernet
    enable_mass_storage

    sleep 5

    ls /sys/class/udc/ > UDC
}

if [ ! -d "/sys/kernel/config/usb_gadget" ]; then
    echo "Couldn't find libcomposite path. Make sure that required kernel modules are installed."
    exit 1
fi

case "$1" in
    clean)
        cleanup
        ;;
    run)
        run
        ;;
    *)
        echo "Unknown command!"
        exit 1
        ;;
esac
